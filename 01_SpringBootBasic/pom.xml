<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!--  maven 模型版本  -->
    <modelVersion>4.0.0</modelVersion>

    <!--  项目坐标信息，groupId + artifactId + version 确定了项目在 maven 仓库中的唯一坐标  -->
    <groupId>com.example</groupId>
    <artifactId>springbootbasic</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <!--  项目信息，不影响构建过程, 可以删除  -->
    <name>01_springbootbasic</name>
    <description>01_springbootbasic</description>

    <!--
        在 pom.xml 文件中定义一组键值对，这些键值对可以作为变量在整个 pom.xml 文件中引用。
        使用:
        <version>${java.version}</version>
        <version>${spring-boot.version}</version>
     -->
    <properties>
        <!--  定义 JDK 版本  -->
        <java.version>11</java.version>
        <!--  定义项目的源码编码为 UTF-8  -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!--  定义 Spring Boot 版本  -->
        <spring-boot.version>2.7.6</spring-boot.version>
    </properties>

    <!--
        dependencies 用于声明项目实际需要使用的依赖库，可以出现在父pom或子模块的pom文件中。
        声明在 dependencies 中的依赖会被 maven 自动下载并加入到项目的类路径中。
     -->
    <dependencies>
        <!--
            dependency 用于具体声明一个依赖的详细信息，子元素信息包含 groupId, artifactId, version, scope等。
            dependency 元素是 dependencies 和 dependencyManagement 元素的子元素，用于描述单个依赖
            添加 web 开发依赖
         -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--
        dependencyManagement 元素用于集中管理项目及其子模块的依赖版本和范围，主要用于父 pom 中，确保整个项目或多模块项目中的依赖版本一致。
     -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--
        dependencyManagement 元素用于集中管理项目及其子模块的依赖版本和范围，主要用于父 pom 中，确保整个项目或多模块项目中的依赖版本一致。
     -->
    <build>

        <!-- 插件配置 -->
        <plugins>
            <!-- 编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- 打包插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <mainClass>com.example.springbootbasic.Application</mainClass>
                    <!--  skip=true 表示跳过特定插件的执行  -->
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
